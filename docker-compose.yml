
version: "3.8"

services:

  # ----------------------------------------
  # üîê Reverse Proxy: nginx + Let's Encrypt
  # ----------------------------------------
  proxy:
    image: nginxproxy/nginx-proxy
    container_name: reverse-proxy
    labels:
      - com.github.nginx-proxy.nginx-proxy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./data/proxy/certs:/etc/nginx/certs:ro
      - ./data/proxy/vhost.d:/etc/nginx/vhost.d
      - ./data/proxy/html:/usr/share/nginx/html
    networks:
      - default   # Ensure Nginx is on the same network

  # ---------------------------

  acme:
    image: nginxproxy/acme-companion
    restart: unless-stopped
    depends_on:
      - proxy
    environment:
      - DEFAULT_EMAIL=abbasibros2014@gmail.com
      - NGINX_PROXY_CONTAINER=reverse-proxy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./data/proxy/certs:/etc/nginx/certs
      - ./data/proxy/vhost.d:/etc/nginx/vhost.d
      - ./data/proxy/html:/usr/share/nginx/html





  # ------------------------------
  # üöÄ n8n (workflow automation)
  # ------------------------------

  n8n:
    image: n8nio/n8n:latest
    restart: unless-stopped
    environment:
      - N8N_BASIC_AUTH_ACTIVE=true
      - N8N_BASIC_AUTH_USER=${N8N_USER}
      - N8N_BASIC_AUTH_PASSWORD=${N8N_PASSWORD}
      - N8N_HOST=${DOMAIN}
      - N8N_PORT=${N8N_PORT}
      - N8N_PROTOCOL=${PROTOCOL}
      - N8N_PATH=/n8n   # Add this line to specify the path
      - WEBHOOK_URL=${PROTOCOL}://${DOMAIN}/n8n/  # Ensure the webhook URL matches the path
      - VIRTUAL_HOST=${DOMAIN}
      - VIRTUAL_PATH=/n8n                       # This line is crucial!
      - LETSENCRYPT_HOST=${DOMAIN}
      - LETSENCRYPT_EMAIL=${EMAIL} 
      - N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS=true  # Ensure file permissions are enforced

    labels:
      - "com.github.nginx-proxy.nginx-proxy=true"  # This allows Nginx to route to n8n
      - "com.github.nginx-proxy.virtual_host=${DOMAIN}"  # The domain where it will be accessible
      - "com.github.nginx-proxy.virtual_path=/n8n"  # Route traffic to /n8n path
      - "com.github.nginx-proxy.letsencrypt_host=${DOMAIN}"  # Enable Let's Encrypt for this service

    ports:
      - "5678:5678"  # Expose the container port for internal communication 

#     - N8N_BASIC_AUTH_ACTIVE=true
#      - N8N_BASIC_AUTH_USER=admin
#      - N8N_BASIC_AUTH_PASSWORD=
#      - N8N_HOST=proxpire.com
#      - N8N_PORT=5678
#      - WEBHOOK_URL=https://proxpire.com/
#      - N8N_PROTOCOL=${PROTOCOL}
#      - VIRTUAL_HOST=proxpire.com
#      - LETSENCRYPT_HOST=proxpire.com
#      - LETSENCRYPT_EMAIL=

    networks:
      # - internal  # Use an internal network for communication between services
      - default   # This allows n8n to be accessible via the reverse proxy / browser

    volumes:
      - ./data/n8n/.n8n:/home/node/.n8n
#      - n8n_data:/home/node/.n8n
    # healthcheck:
    #   test: ["CMD", "curl", "-f", "http://localhost:5678/healthz"]
    #   interval: 30s
    #   timeout: 10s
    #   retries: 5


  # ------------------------------
  # üß† Ollama (local LLM backend)
  # ------------------------------
  ollama:
    image: ollama/ollama:latest
    restart: unless-stopped
    volumes:
      - ./data/ollama:/root/.ollama
    networks:
      - internal

  # ------------------------------
  # üìÇ Qdrant (vector store)
  # ------------------------------
  qdrant:
    image: qdrant/qdrant
    restart: unless-stopped
    ports:
      - "6333:6333"  # For external testing or internal LlamaIndex
    volumes:
      - ./data/qdrant:/qdrant/storage
    networks:
      - internal

  # ------------------------------
  # üß∞ Redis (optional - caching)
  # ------------------------------
  redis:
    image: redis:7
    restart: unless-stopped
    volumes:
      - ./data/redis:/data
    networks:
      - internal

networks:
  internal:
    driver: bridge
  default: {}  # This will automatically connect services to the default network

#volumes:
#  n8n_data:

